accessible: false
author: Simon Hardy, Frédéric Kaczynski
context: |-
    Recall the Stack interface :

    .. code-block:: java

        import java.util.EmptyStackException;

        public interface Stack<E> {

            public boolean empty();

            public E peek() throws EmptyStackException;

            public E pop() throws EmptyStackException;

            public E push(E item);

        }

    You are asked to write unit tests (using JUnit) in order to check wether a particular implementation of this interface is correct.

    Here is a simple template you can use to write your tests (you can use other types than String, of course!) :

    .. code-block:: java

        import org.junit.Test;
        import static org.junit.Assert.assertEquals;

        public class StackTests {

            @Test
            public void firstTest() {
                Stack<Integer> stack = new MyStack<Integer>();
                stack.push(1);
                assertEquals(new Integer(1), stack.pop());
            }

            @Test
            public void secondTest() {
                // ... TODO ...
            }

        }


    `Le projet IntelliJ est disponible ici </course/LSINF1121-2016/m1stacktests/project.zip>`_.

    .. code-block::

        javac MyStack.java
        javac -cp .:junit-4.12.jar StackTests.java
        java -cp .:junit-4.12.jar:hamcrest-core-1.3.jar org.junit.runner.JUnitCore StackTests
environment: java8scala
evaluate: best
groups: false
input_random: '0'
limits:
    memory: '512'
    time: '60'
    output: '100'
name: Mission 1 - Unit tests for the stack [individual]
network_grading: false
order: 2
problems:
    stack_tests:
        type: file
        allowed_exts:
        - .java
        header: |-
            Upload your file here, with only one class named *StackTests*. You can suppose that the class representing the stack under test is called *MyStack*, and that the interface is available (named *Stack*) as written in the template.

            **Note:** You should **not** put your class in a java package. In other words, you should **not** use the ``package`` keyword.
        name: Unit tests for the stack implementation
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
