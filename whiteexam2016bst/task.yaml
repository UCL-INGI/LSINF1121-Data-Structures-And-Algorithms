accessible: 2017-10-30 08:46:14/2018-10-20 10:46:23
author: Guillaume Derval
context: |-
    Etant donné un arbre de recherche binaire, dont les noeuds implémentent l'interface Node:

    .. code-block:: java

        interface Node {
            /**
              * @return la valeur contenue dans ce noeud
              */
            int getValue();

            /**
             * @return Le noeud situe a gauche (dont la valeur est < que la valeur actuelle) s'il existe, null sinon
             */
            Node getLeft();

            /**
              * @return Le noeud situe a droite (dont la valeur est > que la valeur actuelle) s'il existe, null sinon
              */
            Node getRight();
        }

    L'on vous demande de fournir le **corps** de la fonction *ceil*, qui trouve dans l'arbre le plus petit élément plus grand ou égal à `value` (donc soit l'élément lui-même soit l'élément situé directement après par ordre de grandeur). Si un tel élément n'existe pas, elle doit retourner `null`.

    `Un projet Eclipse contenant des tests basiques vous est fourni en cliquant sur ce lien. <https://inginious.info.ucl.ac.be/course/LSINF1121-2016/whiteexam2016bst/project.zip>`_
environment: java8scala
evaluate: best
groups: false
limits:
    time: '30'
    memory: '100'
    output: '2'
name: Bilan M3 - Binary Search Tree
network_grading: false
order: 20
problems:
    q:
        language: java
        type: code
        name: ''
        header: |
            Fournissez ici le **corps** de la fonction `ceil`:

            .. code-block:: java

                Integer ceil(Node root, int value)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
