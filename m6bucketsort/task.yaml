accessible: false
author: Simon Hardy
context: |-
    You are asked to implement the Bucket-Sort algorithm on a specific digit (identified by the second parameter) of an integer number (given as first parameter). Concretely, you have to create a class *BucketSort* with one static method *sort* with the following specifications :

    .. code-block:: java

        /*
         * @pre 'tab' contains only positive integers, 'digit' belongs to [0, 9]
         * @post 'tab' is not modified
         * @returns a new table containing the elements of 'tab' sorted in increasing order
         * on digit 'digit' (digit '0' for the unit, '1' for the decimal and so on).
         * The algorithm must be stable ! (ordering of elements with the same keys is preserved)
             */
        public static int[] sort(int[] tab, int digit);

    Beware that you Bucket-Sort implementation should run in *linear* time !
environment: java8scala
evaluate: best
groups: false
limits:
    memory: '3000'
    output: '100'
    time: '60'
name: '[Old] Mission 6 - Bucket Sort [individual]'
network_grading: false
order: 51
problems:
    bucketsort:
        header: 'Upload the file containing your implementation here. Your class should
            be named *BucketSort* and have only one static method *sort*. '
        name: BucketSort
        allowed_exts:
        - .java
        type: code-file
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 0.0
