accessible: true
author: Simon Hardy
context: |-
    For this mission you will have to implement the following interface, representing an expression tree.

    .. code-block:: java

        /**
         * Un "FormalExpressionTree" est un arbre permettant de mémoriser
         * et de manipuler une expression analytique.
         *
         * Une classe implémentant cette interface doit disposer d'un CONSTRUCTEUR
         * prenant comme argument une chaîne de caractères (String) et construisant
         * l'arbre associé.
         * Cette chaîne est supposée correspondre à une expression analytique
         * syntaxiquement correcte et complètement parenthésée.
         * Une gestion d'exceptions doit être prévue lorsque cette précondition n'est pas vérifiée
         * Un CONSTRUCTEUR sans argument ou avec l'expression vide "" comme argument
         * permet de construire un arbre élémentaire correspondant à l'expression "0"
         */
        public interface FormalExpressionTree {
          /**
           * Cette méthode renvoie une chaîne de caractères correspondant à
           * l'expression analytique représentée dans l'arbre.
           *
           * @pre  this représente une expression analytique syntaxiquement correcte
           * @post une chaîne de caractères, correspondant à l'expression analytique
           *       complètement parenthésée représentée par this, est renvoyée.
           */
          public String toString();

          /**
           * Cette méthode calcule le nouvel arbre correspondant à la dérivée formelle
           * de l'arbre courant. L'arbre courant (this) n'est pas modifié.
           *
           * @pre   this représente une expression analytique syntaxiquement correcte.
           * @post  Une référence à un nouvel arbre représentant la dérivée formelle
           *        de this est renvoyée.
           */
          public FormalExpressionTree derive();
        }
environment: java8scala
groups: true
limits:
    memory: '512'
    output: '100'
    time: '30'
name: Misson 2 - Formal expression tree [group]
order: 8
problems:
    tree:
        name: Formal expression tree
        allowed_exts:
        - .java
        header: 'Upload the file containing your implementation here. The class representing
            your tree should be named *ExpressionTree*. If you need other classes,
            put them in the same file but without any *public* modifier. '
        type: code-file
weight: 1.0
