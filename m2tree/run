#! /bin/bash

getinput tree > student/ExpressionTree.java

# Compile the student code and parse it properly
compilationMessage=$(javac student/ExpressionTree.java 2>&1)
compilationMessage=$(echo "$compilationMessage" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
compilationMessage=$(printf "Compilation of ExpressionTree.java failed :\n::\n\n $compilationMessage")
if [ ! -f student/ExpressionTree.class ]; then
    feedback --result failed --feedback "$compilationMessage"
    exit 0
fi

javac -d ./student MyExpressionTree.java Generator.java

cd student
output=$(run_student java Generator)
feedback --result failed --feedback "Test"
exit 0
cd ..

if [ "$output" = "252" ]; then
	feedback --result failed --feedback "Command was killed due to an out-of-memory"
elif [ "$output" = "253" ]; then
	feedback --result failed --feedback "Command timed out"
elif [ "$output" = "254" ]; then
    feedback --result failed --feedback "Unfortunately, a runtime error occured"
else

    failed=$(echo "$output" | grep -c "KO")
	passed=$(echo "$output" | grep -c "OK")
	problem=$(echo "$output" | grep -c "PROBLEM")
	IFS=':'
	array=( $output )
    totPos=${array[1]}
    okPos=${array[2]}
    totNeg=${array[3]}
    okNeg=${array[4]}

	if [ "$passed" = "1" ]; then
		feedback --result success --feedback "Congratulations, you passed the {{ $okPos + $okNeg }} tests!"
	else if [ "$failed" = "1" ]; then
		feedback --result failed --feedback "Unfortunately, you failed some tests : you got $okPos correct derivates out of $totPos, and you correctly threw $okNeg / $totNeg exceptions upon incorrect syntax"
    else
		feedback --result failed --feedback "Sorry, it seems that a bug occured in the grading script, please contact the course administrator. "
	fi
fi
