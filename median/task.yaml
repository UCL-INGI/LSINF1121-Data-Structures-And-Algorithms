accessible: 2016-10-31 14:56:11/2016-11-30 14:56:13
author: Pierre Schaus
context: |-
    Nous vous donnons l'API d'une classe Vector permettant d'accéder, modifier et interchanger deux élements en temps constant.
    Votre tâche est d'implémenter une méthode permettant de calculer la médiane d'un Vecteur.

    .. code-block:: java

        public interface Vector {
            // taille du vecteur
            public int size();
            // mets la valeur v à l'indice i du vecteur
            public void set(int i, int v);
            // renvoie la valeur à l'indice i du vecteur
            public int get(int i);
            // échange les valeurs aux positions i et j
            public void swap(int i, int j);

        }

    `Un projet Eclipse contenant des tests basiques vous est fourni en cliquant sur ce lien. <https://inginious.info.ucl.ac.be/course/LSINF1121-2016/median/project.zip>`_
environment: java8scala
evaluate: best
groups: false
limits:
    memory: '900'
    time: '30'
    output: '2'
name: Examen blanc 2016 - Median
network_grading: false
problems:
    question1:
        name: Votre code
        type: code
        language: java
        header: |-
            Vous devez implémenter une méthode qui a la signature suivante:

            .. code-block:: java

             public static int median(Vector a, int lo, int hi)



            Cette méthode calcule la médiane du vector "a" entre les positions "lo" et "hi" (incluses).

            Vous pouvez considérer que le vector "a" a toujours une taille impaire.

            Pour vous aider, un projet eclipse avec un test minimaliste pour vérifier si votre code calcule la bonne valeur médiane est donné. En effet, il n'est pas conseillé de débugger son code via Inginious.

            Il n'est pas interdit de modifier ou d'interchanger des elements du vecteur "a" durant le calcul (avec les methode get/set/swap). Il est interdit de faire appel à d'autres méthodes de la librairie standard Java. Il est également interdit de faire un "new".

            L'évaluation porte sur sur 10 points:

            - bonne valeur de retour: 3 points,

            - bonne valeur de retour et complexité O(n log n): 5 points,

            - bonne valeur de retour et complexité O(n) expected (cas moyen sur une distribution uniforme aléatoire): 10 points.


            Tout le code que vous écrivez dans le champ texte sera substitué à l'endroit indiqué ci-dessous.
            Vous êtes libre d'implémenter éventuellement d'autres méthodes pour vous aider dans cette classe mais la méthode "median" donnée ci-dessus doit au moins y figurer.

            .. code-block:: java

                public class Median {
                    // votre code sera substitué ici
                }
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 10.0
