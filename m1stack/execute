#! /bin/bash

function execute {
    local -n names=$1
    local -n forbiddenClasses=$2

    cd student/

    # We check if one of the forbidden classes where used
    # i.e. if the student cheated
    for forbiddenClass in "${forbiddenClasses[@]}"; do
        for name in "${names[@]}"; do
        	cheat=$(cat "${name}.java" | grep -c "${forbiddenClass}")
        	echo -e "Cheat check for ${forbiddenClass}: ${cheat}"
        	if [ "$cheat" != "0" ]; then
        		feedback --result failed --feedback "We detected the use of ${forbiddenClass}, which is prohibited for this test."
        	    exit 1
        	fi
        done
    done

    # We compile the student's code
    for name in "${names[@]}"; do
        output=$(javac "${name}.java" 2>&1)
        retval=$?
        if [ "$retval" != "0" ]; then
            output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
            feedback-result failed
            feedback-msg -ae -m "Compilation of ${name} failed:\n::\n\n"
            feedback-msg -ae -m "$output"
            exit 1
        fi
    done

    # We compile the JUnit tests
    output=$(javac -cp .:junit-4.12.jar RunTests.java Tests.java 2>&1)
    retval=$?
    if [ "$retval" != "0" ]; then
        output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
        feedback-result failed
        feedback-msg -ae -m "Compilation of JUnit tests failed:\n::\n\n"
        feedback-msg -ae -m "$output"
        exit 1
    fi

    # We run the tests
    output=$(run_student java -cp .:junit-4.12.jar:hamcrest-core-1.3.jar RunTests 2>&1)
    retval=$?
    output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')

    if [ "$retval" = "0" ]; then
        feedback-result success
        feedback-msg -ae -m "Your implementation passed all the tests !"
    else
        feedback-result failed
        if [ "$retval" = "252" ]; then
            feedback-msg -ae -m "The execution was killed due to an out-of-memory (Could it be because of an infinite loop ?)"
        elif [ "$retval" = "253" ]; then
            feedback-msg -ae -m "The execution timed out"
        elif [ "$retval" = "254" ]; then
            feedback-msg -ae -m "An error occured while running the proxy"
        else
            feedback-msg -ae -m "Your implementation didn't pass all the tests"
        fi

        # Sometime output only contains spaces, so we must trim them
        if [[ ! -z "${output// }" ]]; then
            feedback-msg -ae -m "\n::\n\n${output}\n\n"
        fi
    fi
}
