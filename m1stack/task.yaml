accessible: 2018-09-24 16:00:00/2019-09-24 16:00:00
author: Simon Hardy, Frédéric Kaczynski
context: |-
    Il vous est demandé d'implémenter l'interface suivante, représentant une pile, en utilisant une liste simplement chainée. Vous devriez avoir au moins un constructeur sans argument, créant une pile vide.

    Note: utiliser *java.util.Stack<E>* est interdit!

    .. code-block:: java

        import java.util.EmptyStackException;

        public interface Stack<E> {

            public boolean empty();

            public E peek() throws EmptyStackException;

            public E pop() throws EmptyStackException;

            public E push(E item);

        }


    `Le projet IntelliJ est disponible ici </course/LSINF1121-2016/m1stack/project.zip>`_.
environment: java8scala
evaluate: best
groups: false
input_random: '0'
limits:
    time: '45'
    memory: '512'
    output: '100'
name: PART 1 - Linked List Stack (Implem)
network_grading: false
order: 2
problems:
    stack:
        header: |-
            Téléchargez ici le fichier contenant votre implémentation. La classe représentant votre pile doit être nommée *MyStack* et implémenter *Stack* (comme d'habitude, l'interface est disponible sur INGInious).

            **Note** : Vous ne devriez **pas** mettre votre classe dans un package java. En d'autres termes, vous ne devriez **pas** utiliser le mot-clé ``package``.
        type: file
        name: Stack
        allowed_exts:
        - .java
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
