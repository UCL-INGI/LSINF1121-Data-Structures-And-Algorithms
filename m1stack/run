#! /bin/bash
getinput stack > student/MyStack.java

cheat=$(cat student/MyStack.java | grep -c "import java.util.Stack")
if [ $cheat != "1" ]; then
	feedback --result failed --feedback "You can't use java.util.Stack!"
    exit 0
fi


compilationMessage=$(javac student/MyStack.java 2>&1)
if [ ! -f student/MyStack.class ]; then
    feedback --result failed --feedback "Compilation of MyStack.java failed : $compilationMessage"
    exit 0
fi

# Copy everything in the 'student' directory for run_student
cat StackProps.scala > student/StackProps.scala
cp scalacheck.jar student/scalacheck.jar
cd student
scalac -cp .:scalacheck.jar StackProps.scala
output=$(run_student scala -cp .:scalacheck.jar StackProps)
cd ..

if [ "$output" = "252" ]; then
	feedback --result failed --feedback "Command was killed due to an out-of-memory"
elif [ "$output" = "253" ]; then
	feedback --result failed --feedback "Command timed out"
elif [ "$output" = "254" ]; then
    feedback --result failed --feedback "Unfortunately, a runtime error occured"
else
    failed=$(echo "$output" | grep -c "Falsified")
	passed=$(echo "$output" | grep -c "OK")

	if [ "$failed" = "0" ]; then
		feedback --result success --feedback "Congratulations, you passed all the tests!"
	else
		feedback --result failed --feedback "Unfortunately, you failed $failed tests out of $(($passed+$failed))"
	fi
fi
