accessible: /2016-09-29 11:59:59
author: Simon Hardy, Frédéric Kaczynski
context: |-
    You are asked to write unit tests (using JUnit) in order to check wether a particular interpreter does its job correctly (i.e. the method *interpret* follows its specifications).

    Here is a simple template you can use to write your tests :

    .. code-block:: java

        import org.junit.Test;
        import static org.junit.Assert.assertEquals;
        public class InterpreterTests {

            String instructions = "1 1 add pstack";
            InterpreterInterface interpreter = new Interpreter();

            @Test
            public void firstTest() {
                String result = interpreter.interpret(instructions);
                assertEquals(result,"2");
            }

            @Test
            public void secondTest() {
                // TODO...
            }
        }
environment: java8scala
evaluate: best
groups: false
limits:
    time: '65'
    memory: '512'
    output: '100'
name: Mission 1 - Unit tests for the interpreter [individual]
network_grading: false
order: 4
problems:
    interpreter_tests:
        type: code-file
        header: 'Upload your file here, with only one class named "InterpreterTests".
            The class representing the interpreter under test is called *Interpreter*
            and implements *InterpreterInterface*, as written in the template. '
        name: Unit tests for the interpreter
        allowed_exts:
        - .java
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
