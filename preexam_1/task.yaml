accessible: false
author: Frédéric Kaczynski
context: |-
    Consider this class, ``BreadthFirstShortestPaths``, that computes the shortest path between multiple node sources and any node in an undirected graph.

    .. code-block:: java

        public class BreadthFirstShortestPaths {

            private static final int INFINITY = Integer.MAX_VALUE;
            private boolean[] marked; // marked[v] = is there an s-v path
            private int[] distTo;     // distTo[v] = number of edges shortest s-v path

            /**
             * Computes the shortest path between any
             * one of the sources and very other vertex
             * @param G the graph
             * @param sources the source vertices
             */
             public BreadthFirstShortestPaths(Graph G, Iterable<Integer> sources) {
                 marked = new boolean[G.V()];
                 distTo = new int[G.V()];
                 for (int v = 0;v < G.V();v++) {
                     distTo[v] = INFINITY;
                 }
                 bfs(G, sources);
             }

             // Breadth-first search from multiple sources
             private void bfs(Graph G, Iterable<Integer> sources) {
                 // TODO
             }

             /**
              * Is there a path between (at least one of) the sources and vertex v?
              * @param v the vertex
              * @return true if there is a path, and false otherwise
              */
             private boolean hasPathTo(int v) {
                 // TODO
             }

             /**
              * Returns the number of edges in a shortest path
              * between one of the sources and vertex v?
              * @param v the vertex
              * @return the number of edges in a shortest path
              */
             public int distTo(int v) {
                 // TODO
             }
        }

    As a reminder, here is the specification of the ``Graph`` class
environment: java8scala
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '100'
name: Pré-Examen
network_grading: false
problems:
    question1:
        header: ''
        name: BreadthFirstShortestPaths
        language: java
        type: code
stored_submissions: 0
weight: 0.0
