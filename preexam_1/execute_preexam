#! /bin/bash

function execute_preexam {
    local name="$1"

    parsetemplate --output "student/${name}.java" "student/${name}.java"

    cd student/

    # We compile the students code
    output=$(javac "${name}.java" 2>&1)
    retval=$?
    if [ "$retval" != "0" ]; then
        output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
        feedback-result failed
        feedback-msg -ae -m "Compilation of ${name} failed:\n::\n\n"
        feedback-msg -ae -m "$output"
        exit 1
    fi

    # We compile the JUnit tests
    output=$(javac -cp .:junit-4.12.jar RunTests.java Tests.java 2>&1)
    retval=$?
    if [ "$retval" != "0" ]; then
        output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
        feedback-result failed
        feedback-msg -ae -m "Compilation of ${name} failed:\n::\n\n"
        feedback-msg -ae -m "$output"
        exit 1
    fi

    output=$(run_student java -cp .:junit-4.12.jar:hamcrest-core-1.3.jar RunTests 2>&1)
    retval=$?

    if [ "$retval" = "0" ]; then
        feedback-result success
        feedback-msg -ae -m "Your implementation passed all the tests !"
    else
        output=$(echo "$output" | sed -e 's/^/\t/' | sed -e 's/%/%%%/g')
        feedback-msg -ae -m "\n::\n\n${output}\n\n"

        feedback-result failed
        feedback-msg -ae -m "Your implementation didn't pass all the tests"
    fi

}
