accessible: true
author: Simon Hardy
context: |-
    You are asked to write a mini-PostScript interpreter as described in the *pdf* of the mission. Precisely, you must implement the following interface :

    .. code-block:: java

        public interface Interpreter {

            @pre: 'instructions' is a valid chain of PostScript instructions
            @post: returns the state of the stack when a 'pstack' instruction is encountered.
                If several elements are still on the stack, separate them with whitespaces.
                If there is no element on the stack or no 'pstack' instruction, return the empty string ("").
            public String interpret(String instructions);

        }

    Don't forget to handle the different possible exceptions : think about java.util.EmptyStackException, java.lang.ArithmeticException...

    Note that [group] means that only one student must submit the code for the entire group.
environment: java8scala
limits:
    memory: '512'
    time: '30'
    output: '100'
name: Mission 1 - PostScript Interpreter [group]
problems:
    interpreter:
        allowed_exts:
        - .java
        header: 'Upload your interpreter here. Your file should contain exactly one
            public class named "Interpreter", that has at least an "interpret" method.
            Put additional classes inside "Interpreter", or just after it but then
            without the *public* key-word. '
        name: PostScript interpreter
        type: code-file
weight: 1.0
