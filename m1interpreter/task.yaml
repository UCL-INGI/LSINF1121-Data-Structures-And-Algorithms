accessible: true
author: Simon Hardy
context: |-
    You are asked to write a mini-PostScript interpreter as described in the *pdf* of the mission. Precisely, you must implement the following interface :

    .. code-block:: java

        public interface Interpreter {

            @pre: 'instructions' is a valid chain of PostScript instructions
            @post: returns the state of the stack when a 'pstack' instruction is encountered.
                If several elements are still on the stack, separate them with whitespaces.
                If there is no element on the stack or no 'pstack' instruction, return the empty string ("").
            public String interpret(String instructions);

        }

    Note that [group] means that only one student must submit the code for the entire group.
environment: java8scala
limits:
    memory: '512'
    output: '100'
    time: '30'
name: Mission 1 - PostScript Interpreter [group]
problems:
    interpreter:
        allowed_exts:
        - .java
        header: 'Upload your interpreter here. The class should be named "Interpreter"
            and have an "interpret" method. '
        type: code-file
        name: PostScript interpreter
    stack:
        name: Stack
        allowed_exts:
        - .java
        type: code-file
        header: 'Upload the stack used by your interpreter here. The class must be
            named "MyStack". '
weight: 1.0
